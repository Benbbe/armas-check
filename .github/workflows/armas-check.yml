# This is a basic workflow to help you get started with Actions

name: Armas check tickets

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  schedule:
  - cron: "30 6 * * *"
  - cron: "30 8 * * *"
env: 
  departure: '"puertoOrigenEntidad": {"id": "LEI","textoCorto": "ALMERIA","textoLargo": "AlmerÃ­a","location": "andalucia","codigoPuerto": "LEI"}'
  arrival:   '"puertoDestinoEntidad": {"id": "GHZ","textoCorto": "GHAZAOUET","textoLargo": "Ghazaouet","location": "argelia","codigoPuerto": "GHZ"}'
  date: '"fecha": "20250701"'
  ERROR: "SE HA PRODUCIDO UN ERROR Y NO SE HA PODIDO COMPLETAR LA OPERACION. POR FAVOR, INTENTELO PASADOS UNOS MINUTOS. GRACIAS."

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      - name: Call Armas
        id: armas
        uses: fjogeleit/http-request-action@v1
        with:
          url: https://armastrasmediterranea.com/api/calendar?state={${{env.departure}},${{env.arrival}},${{env.date}}}
          method: GET
      - name: Show Response
        id: call
        if: 
          echo "ERROR=${{ fromJson(steps.armas.outputs.response).error }}" -> $GITHUB_OUTPUT
      - name: check error
        if: '!steps.armas.call.error = ${{ env.ERROR }}'
        run: echo "I'd expect this to run"
        
